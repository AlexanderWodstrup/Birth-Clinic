// <auto-generated />
using Birth_Clinic.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Birth_Clinic.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210413091938_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Birth_Clinic.Interface.ClinicRoom", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Availability")
                        .HasColumnType("bit");

                    b.Property<string>("BirthClinicName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomId");

                    b.HasIndex("BirthClinicName");

                    b.ToTable("Rooms");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ClinicRoom");
                });

            modelBuilder.Entity("Birth_Clinic.Interface.Clinician", b =>
                {
                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Availability")
                        .HasColumnType("bit");

                    b.Property<string>("BirthClinicName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.HasKey("FirstName", "LastName");

                    b.HasIndex("BirthClinicName");

                    b.ToTable("Clinicians");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Clinician");
                });

            modelBuilder.Entity("Birth_Clinic.Models.BirthClinic", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.ToTable("BirthClinic");
                });

            modelBuilder.Entity("Birth_Clinic.Models.BirthRoom", b =>
                {
                    b.HasBaseType("Birth_Clinic.Interface.ClinicRoom");

                    b.HasDiscriminator().HasValue("BirthRoom");
                });

            modelBuilder.Entity("Birth_Clinic.Models.MaternityRoom", b =>
                {
                    b.HasBaseType("Birth_Clinic.Interface.ClinicRoom");

                    b.HasDiscriminator().HasValue("MaternityRoom");
                });

            modelBuilder.Entity("Birth_Clinic.Models.RestRoom", b =>
                {
                    b.HasBaseType("Birth_Clinic.Interface.ClinicRoom");

                    b.HasDiscriminator().HasValue("RestRoom");
                });

            modelBuilder.Entity("Birth_Clinic.Models.Doctor", b =>
                {
                    b.HasBaseType("Birth_Clinic.Interface.Clinician");

                    b.HasDiscriminator().HasValue("Doctor");
                });

            modelBuilder.Entity("Birth_Clinic.Models.MidWife", b =>
                {
                    b.HasBaseType("Birth_Clinic.Interface.Clinician");

                    b.HasDiscriminator().HasValue("MidWife");
                });

            modelBuilder.Entity("Birth_Clinic.Models.Nurse", b =>
                {
                    b.HasBaseType("Birth_Clinic.Interface.Clinician");

                    b.HasDiscriminator().HasValue("Nurse");
                });

            modelBuilder.Entity("Birth_Clinic.Models.SOSU_Assistent", b =>
                {
                    b.HasBaseType("Birth_Clinic.Interface.Clinician");

                    b.HasDiscriminator().HasValue("SOSU_Assistent");
                });

            modelBuilder.Entity("Birth_Clinic.Models.Secretary", b =>
                {
                    b.HasBaseType("Birth_Clinic.Interface.Clinician");

                    b.HasDiscriminator().HasValue("Secretary");
                });

            modelBuilder.Entity("Birth_Clinic.Interface.ClinicRoom", b =>
                {
                    b.HasOne("Birth_Clinic.Models.BirthClinic", "BirthClinic")
                        .WithMany("ClinicRooms")
                        .HasForeignKey("BirthClinicName");

                    b.Navigation("BirthClinic");
                });

            modelBuilder.Entity("Birth_Clinic.Interface.Clinician", b =>
                {
                    b.HasOne("Birth_Clinic.Models.BirthClinic", "BirthClinic")
                        .WithMany("Clinicians")
                        .HasForeignKey("BirthClinicName");

                    b.Navigation("BirthClinic");
                });

            modelBuilder.Entity("Birth_Clinic.Models.BirthClinic", b =>
                {
                    b.Navigation("Clinicians");

                    b.Navigation("ClinicRooms");
                });
#pragma warning restore 612, 618
        }
    }
}
